{"version":3,"file":"common.js","sources":["webpack:///./src/appState/contextProvider.js","webpack:///./src/common/applicationComponent.js","webpack:///./src/common/applicationComponent.view.js","webpack:///./src/common/applicationContext.js","webpack:///./src/common/applicationTag.jsx","webpack:///./src/common/card.jsx","webpack:///./src/common/circularButton.jsx","webpack:///./src/common/flexView.jsx","webpack:///./src/common/imageCarousel.jsx","webpack:///./src/common/text/h1.jsx","webpack:///./src/common/text/h2.jsx","webpack:///./src/common/text/h3.jsx","webpack:///./src/common/text/info.jsx","webpack:///./src/common/text/paragraph.jsx","webpack:///./src/pages/category/category.scss","webpack:///./src/pages/category/category.view.jsx","webpack:///./src/pages/landingPage/landingPage.view.jsx","webpack:///./src/routes/applicationRoutes.js","webpack:///./src/service/appStateService.js","webpack:///./src/service/service.js","webpack:///./src/service/serviceExecutor.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nexport const RmmsContext = React.createContext();\n\nexport default class RmmsAppState extends Component {\n  state = {\n    category: {\n      categories: [],\n      dirty: true,\n    },\n    company: {\n      dirty: true,\n      id: 0,\n    },\n    companyCustomise: {\n      dirty: true,\n      landingPage: {\n        banners: [],\n        bottomList: [],\n        carousel: [],\n        mainMenuButtons: [],\n      },\n      style: { primary: \"\", secondary: \"\" },\n    },\n    deviceInfo: {\n      dirty: true,\n    },\n    item: { dirty: true, items: [] },\n    shortTermMemory: {\n      currentCategoryId: 0,\n      currentSegmentTypeIndex: 0,\n    },\n  };\n\n  AppStateWrapper = ({ children }) => {\n    const {\n      category,\n      company,\n      companyCustomise,\n      deviceInfo,\n      item,\n      shortTermMemory,\n    } = this.state;\n    return (\n      <RmmsContext.Provider\n        value={{\n          category: {\n            ...category,\n            setCategories: this.setCategories,\n          },\n          company: {\n            ...company,\n            setCompany: this.setCompany,\n          },\n          companyCustomise: {\n            ...companyCustomise,\n            setCompanyCustomise: this.setCompanyCustomise,\n          },\n          deviceInfo: {\n            ...deviceInfo,\n            setDeviceInfo: this.setDeviceInfo,\n          },\n          item: {\n            ...item,\n            setItems: this.setItems,\n          },\n          shortTermMemory: {\n            ...shortTermMemory,\n            setShortTermMemory: this.setShortTermMemory,\n          },\n        }}\n      >\n        {children}\n      </RmmsContext.Provider>\n    );\n  };\n\n  setCategories = (categories) => {\n    this.setState((state) => ({\n      category: {\n        ...state.category,\n        categories,\n        dirty: false,\n      },\n    }));\n  };\n\n  setCompany = (company) => {\n    this.setState((state) => ({\n      company: {\n        ...company,\n        dirty: false,\n      },\n    }));\n  };\n\n  setCompanyCustomise = (companyCustomise) => {\n    this.setState((state) => ({\n      companyCustomise: {\n        ...companyCustomise,\n        dirty: false,\n      },\n    }));\n  };\n\n  setDeviceInfo = (deviceInfo) => {\n    this.setState({\n      deviceInfo: {\n        deviceInfo,\n        dirty: false,\n      },\n    });\n  };\n\n  setItems = (items) => {\n    this.setState({\n      item: {\n        dirty: false,\n        items,\n      },\n    });\n  };\n\n  setItems = (items) => {\n    this.setState({\n      item: {\n        dirty: false,\n        items,\n      },\n    });\n  };\n\n  setShortTermMemory = (shortTermMemory) => {\n    this.setState({\n      shortTermMemory,\n    });\n  };\n}\n","import React from \"react\";\nimport Taro, { getCurrentInstance } from \"@tarojs/taro\";\nimport { Component } from \"react\";\nimport { RmmsContext } from \"../appState/contextProvider\";\nimport ServiceExecutor from \"../service/serviceExecutor\";\nimport ApplicationContext from \"./applicationContext\";\nimport AppStateService from \"../service/appStateService\";\n\nexport default class ApplicationComponent extends Component {\n  state = {\n    modal: {\n      show: false,\n    },\n    toast: {\n      show: false,\n    },\n  };\n\n  static _applicationContext;\n  static _appStateService;\n  static _serviceExecutor;\n  static contextType = RmmsContext;\n\n  get applicationContext() {\n    if (!this._applicationContext) {\n      this._applicationContext = new ApplicationContext();\n    }\n    return this._applicationContext;\n  }\n\n  get appStateService() {\n    if (!this._appStateService) {\n      this._appStateService = new AppStateService(\n        this.appState,\n        this.serviceExecutor\n      );\n    }\n    return this._appStateService;\n  }\n\n  get appState() {\n    return this.context;\n  }\n\n  get serviceExecutor() {\n    if (!this._serviceExecutor) {\n      this._serviceExecutor = new ServiceExecutor(this.applicationContext.host);\n    }\n    return this._serviceExecutor;\n  }\n\n  getRouterParams() {\n    return getCurrentInstance().router.params;\n  }\n\n  goTo(route, params) {\n    const generateRouteParams = () => {\n      let result = \"\";\n      if (params) {\n        result += \"?\";\n        result += params.map((param) => `${param.key}=${param.value}&`);\n        result = result.substring(0, result.length - 1);\n      }\n      return result;\n    };\n    Taro.navigateTo({\n      url: route + generateRouteParams(),\n    });\n  }\n\n  goToTabBar(route) {\n    wx.switchTab({ url: route });\n  }\n\n  async onLoad(options) {\n    const { companyId } = options;\n    this.appStateService.getCompany(companyId).then((result) => {\n      wx.setNavigationBarTitle({\n        title: this.appState.company.name,\n      });\n    });\n    this.appStateService.getCompanyCustomise(companyId).then((content) => {\n      wx.setNavigationBarColor({\n        backgroundColor: content.style.primary,\n        frontColor: \"#ffffff\",\n      });\n    });\n    this.appStateService.getCategories(companyId);\n    this.appStateService.getItems(companyId);\n  }\n}\n","import React from \"react\";\nimport { AtModal } from \"taro-ui\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { RmmsContext } from \"../appState/contextProvider\";\nimport FlexView from \"./flexView\";\n\nexport default class ApplicationComponentView extends ApplicationComponent {\n  static contextType = RmmsContext;\n\n  Wrapper = ({ children }) => {\n    const { modal } = this.props;\n    return (\n      <FlexView style={{ height: \"100vh\" }}>\n        <ErrorModal {...modal} />\n        {children}\n      </FlexView>\n    );\n  };\n\n  get appState() {\n    return this.context;\n  }\n\n  get appStyle() {\n    return this.appState.companyCustomise.style;\n  }\n}\n\nfunction ErrorModal(props) {\n  const { isOpen } = props;\n  return (\n    <AtModal\n      isOpen={isOpen}\n      title=\"标题\"\n      cancelText=\"取消\"\n      confirmText=\"确认\"\n      onClose={() => console.log(\"onClose\")}\n      onCancel={() => console.log(\"onCancel\")}\n      onConfirm={() => console.log(\"onConfirm\")}\n      content=\"欢迎加入京东凹凸实验室\\n\\r欢迎加入京东凹凸实验室\"\n    />\n  );\n}\n","export default class ApplicationContext {\n  get host() {\n    return process.env.SERVICE_URL;\n  }\n\n  get mock() {\n    return false;\n  }\n}\n","import React from \"react\";\nimport { AtTag } from \"taro-ui\";\nimport ApplicationComponentView from \"./applicationComponent.view\";\nimport FlexView from \"./flexView\";\n\nconst COLORS = {\n  blue: { backgroundColor: \"#e6f8ff\", border: \"#90d5ff\", color: \"#086dd9\" },\n  cyan: { backgroundColor: \"#e7fffb\", border: \"#87e8de\", color: \"#189fa2\" },\n  geekblue: { backgroundColor: \"#f0f5ff\", border: \"#adc6ff\", color: \"#314ac9\" },\n  green: { backgroundColor: \"#fcffe6\", border: \"#b7eb8f\", color: \"#389e0f\" },\n  lime: { backgroundColor: \"#f6ffed\", border: \"#ecff98\", color: \"#8ebe22\" },\n  orange: { backgroundColor: \"#fff7e6\", border: \"#ffd99a\", color: \"#da8029\" },\n  purple: { backgroundColor: \"#f9f0ff\", border: \"#d3adf7\", color: \"#5e2ab0\" },\n  red: { backgroundColor: \"#fff1f0\", border: \"#ffaba7\", color: \"#d63b45\" },\n  volcano: { backgroundColor: \"#fff2e8\", border: \"#ffc19f\", color: \"#d7471d\" },\n  yellow: { backgroundColor: \"#fffbe6\", border: \"#ffecac\", color: \"#d89219\" },\n};\n\nexport default class ApplicationTag extends ApplicationComponentView {\n  render() {\n    const { children, color, style } = this.props;\n    return (\n      <AtTag\n        customStyle={{\n          padding: 0,\n          width: \"max-content\",\n          ...COLORS[color],\n          ...style,\n        }}\n        type=\"primary\"\n        {...this.props}\n      >\n        <FlexView style={{ paddingLeft: 6, paddingRight: 6 }}>\n          {children}\n        </FlexView>\n      </AtTag>\n    );\n  }\n}\n","import React from \"react\";\nimport ApplicationComponentView from \"./applicationComponent.view\";\nimport FlexView from \"./flexView\";\n\nexport default class Card extends ApplicationComponentView {\n  render() {\n    const { children, style } = this.props;\n    return (\n      <FlexView style={{ borderRadius: 15, ...style }}>{children}</FlexView>\n    );\n  }\n}\n","import React from \"react\";\nimport { AtAvatar } from \"taro-ui\";\nimport ApplicationComponentView from \"./applicationComponent.view\";\nimport FlexView from \"./flexView\";\n\nexport default class CircularButton extends ApplicationComponentView {\n  render() {\n    let {\n      children,\n      color,\n      onClick = () => console.log(\"please override\"),\n      style,\n      url,\n    } = this.props;\n    const { primary, secondary } = this.appStyle;\n    return (\n      <FlexView onClick={onClick} {...this.props}>\n        <AtAvatar circle image={url} />\n      </FlexView>\n    );\n  }\n}\n","import React from \"react\";\nimport { View } from \"@tarojs/components\";\n\nexport default function FlexView(props) {\n  const { children, onClick, style } = props;\n  return (\n    <View\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...style,\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Image, Swiper, SwiperItem } from \"@tarojs/components\";\nimport ApplicationComponentView from \"./applicationComponent.view\";\n\nexport default class ImageCarousel extends ApplicationComponentView {\n  render() {\n    const { imageUrls, style } = this.props;\n    const { primary, secondary } = this.appStyle;\n    const SwiperImageItems = imageUrls.map((imageUrl) => {\n      return (\n        <SwiperItem>\n          <Image src={imageUrl} style={{ width: \"100%\" }} />\n        </SwiperItem>\n      );\n    });\n    return (\n      <Swiper\n        indicatorColor={secondary}\n        indicatorActiveColor={primary}\n        circular\n        indicatorDots\n        style={{ height: 245, ...style }}\n      >\n        {SwiperImageItems}\n      </Swiper>\n    );\n  }\n}\n","import React from \"react\";\nimport P from \"./paragraph\";\nexport default class H1 extends P {\n  getColor() {\n    return \"#5F5F5F\";\n  }\n\n  getClassName() {\n    return \"at-article__h1\";\n  }\n}\n","import React from \"react\";\nimport H1 from \"./h1\";\n\nexport default class H2 extends H1 {\n  getClassName() {\n    return \"at-article__h2\";\n  }\n}\n","import React from \"react\";\nimport H1 from \"./h1\";\n\nexport default class H3 extends H1 {\n  getClassName() {\n    return \"at-article__h3\";\n  }\n}\n","import React from \"react\";\nimport P from \"./paragraph\";\n\nexport default class Info extends P {\n  getClassName() {\n    return \"at-article__info\";\n  }\n}\n","import React from \"react\";\nimport { View } from \"@tarojs/components\";\nimport ApplicationComponentView from \"../applicationComponent.view\";\n\nexport default class P extends ApplicationComponentView {\n  render() {\n    const { children, companyColor = false, style } = this.props;\n    const color = companyColor ? this.appStyle.secondary : this.getColor();\n    return (\n      <View\n        className={this.getClassName()}\n        style={{ margin: 0, color, whiteSpace: \"pre-wrap\", ...style }}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  getColor() {\n    return \"\";\n  }\n\n  getClassName() {\n    return \"at-article__p\";\n  }\n}\n","// extracted by mini-css-extract-plugin","import React from \"react\";\nimport { Fragment } from \"react\";\nimport { Image } from \"@tarojs/components\";\nimport { AtTabs, AtTabsPane, AtSearchBar, AtSegmentedControl } from \"taro-ui\";\nimport \"./category.scss\";\nimport H3 from \"../../common/text/h3\";\nimport Info from \"../../common/text/info\";\nimport FlexView from \"../../common/flexView\";\nimport ApplicationTag from \"../../common/applicationTag\";\n\nexport default function CategoryView(props) {\n  return (\n    <FlexView>\n      <AtSearchBar />\n      <FlexView style={{ marginLeft: 5, marginRight: 5 }}>\n        <TopSegment {...props} />\n      </FlexView>\n\n      <FlexView style={{ marginTop: 5 }}>\n        <CategoryNav {...props} />\n      </FlexView>\n    </FlexView>\n  );\n}\n\nexport function CategoryNav(props) {\n  const { currentCategoryIndex, categories, onClickCategory } = props;\n  const prepareTabList = (categories) => {\n    categories = categories.sort(\n      (category1, category2) => category1.sequence - category2.sequence\n    );\n    return categories.map((category) => ({ title: category.name }));\n  };\n  return (\n    <AtTabs\n      current={currentCategoryIndex}\n      height=\"600px\"\n      onClick={onClickCategory}\n      scroll\n      tabDirection=\"vertical\"\n      tabList={prepareTabList(categories)}\n    >\n      <TabsPaneContainer {...props} />\n    </AtTabs>\n  );\n}\n\nexport function TabsPaneContainer(props) {\n  const { currentCategoryIndex, categoriesItems, onClickItem } = props;\n  return categoriesItems.map((categoryItems, index) => {\n    return (\n      <AtTabsPane\n        current={currentCategoryIndex}\n        key={\"TabsPaneContainer\" + index}\n        tabDirection=\"vertical\"\n        index={index}\n      >\n        <ItemList items={categoryItems} onClickItem={onClickItem} />\n      </AtTabsPane>\n    );\n  });\n}\n\nexport function ItemList(props) {\n  const { items, onClickItem } = props;\n  const ItemCards = sortSequence(items).map((item, index) => {\n    const {\n      address,\n      area,\n      cost,\n      description,\n      imageUrls,\n      listingType,\n      livingRoom,\n      name,\n      restroom,\n      room,\n    } = item;\n    return (\n      <FlexView\n        key={ItemList + index}\n        onClick={() => onClickItem(item)}\n        style={{ alignItem: \"center\", flexDirection: \"row\", marginBottom: 15 }}\n      >\n        <Image\n          src={imageUrls[0]}\n          style={{ borderRadius: 5, height: 75, width: 75 }}\n        />\n        <FlexView style={{ marginLeft: 15, maxWidth: 200 }}>\n          <FlexView\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <ListingTypeTag listingType={listingType} />\n            <H3 style={{ marginLeft: 8 }}>{name}</H3>\n          </FlexView>\n          <Info>{`${area}平方呎 ${room}房${livingRoom}廳`}</Info>\n          <Info>{address}</Info>\n        </FlexView>\n      </FlexView>\n    );\n  });\n  return <Fragment>{ItemCards}</Fragment>;\n}\n\nexport function ListingTypeTag({ listingType }) {\n  return (\n    <ApplicationTag color={listingType === \"RENT\" ? \"blue\" : \"green\"}>\n      {listingType === \"RENT\" ? \"出租\" : \"出售\"}\n    </ApplicationTag>\n  );\n}\n\nexport function sortSequence(objects) {\n  return objects.sort(\n    (object1, object2) => object1.sequence - object2.sequence\n  );\n}\n\nexport function TopSegment(props) {\n  const { currentSegmentTypeIndex, onChangeSegmentType } = props;\n  return (\n    <AtSegmentedControl\n      values={[\"出租\", \"買賣\"]}\n      onClick={onChangeSegmentType}\n      current={currentSegmentTypeIndex}\n    />\n  );\n}\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"@tarojs/components\";\nimport ApplicationComponentView from \"../../common/applicationComponent.view\";\nimport ImageCarousel from \"../../common/imageCarousel\";\nimport Card from \"../../common/card\";\nimport CircularButton from \"../../common/circularButton\";\nimport Info from \"../../common/text/info\";\nimport H2 from \"../../common/text/h2\";\nimport FlexView from \"../../common/flexView\";\n\nexport default class LandingPageView extends ApplicationComponentView {\n  render() {\n    const { categories, items, landingPage, onClickItem, onClickMenuButton } =\n      this.props;\n    return (\n      <this.Wrapper>\n        <FlexView>\n          <ImageCarousel\n            imageUrls={landingPage.carousel.map((image) => image.url)}\n          />\n          <DefaultCardContent\n            banners={landingPage.banners}\n            bottomList={landingPage.bottomList}\n            mainMenuButtons={landingPage.mainMenuButtons}\n            categories={categories}\n            items={items}\n            onClickItem={onClickItem}\n            onClickMenuButton={onClickMenuButton}\n          />\n        </FlexView>\n      </this.Wrapper>\n    );\n  }\n}\n\nexport function BottomListing({ bottomList, categories, items, onClickItem }) {\n  return bottomList.map((listItem) => {\n    if (listItem.type === \"category\") {\n      return (\n        <CategoryListing\n          categories={categories}\n          categoryId={listItem.id}\n          items={items}\n          onClickItem={onClickItem}\n        />\n      );\n    } else if (listItem.type === \"item\") {\n      return <ItemListing itemId={listItem.id} />;\n    }\n  });\n}\n\nexport function ButtonRow(props) {\n  const { mainMenuButtons, onClickMenuButton } = props;\n  const buttons = mainMenuButtons.map((button, index) => (\n    <FlexView\n      key={\"landing_page_button_row\" + index}\n      style={{\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        paddingBottom: 10,\n        paddingTop: 10,\n        marginTop: 10,\n      }}\n    >\n      <CircularButton\n        color={button.color}\n        onClick={() => onClickMenuButton(150)}\n        url={button.url}\n      ></CircularButton>\n      <Info style={{ color: \"#5F5F5F\", marginTop: 6 }}>{button.name}</Info>\n    </FlexView>\n  ));\n  return <View className=\"at-row at-row__justify--around\">{buttons}</View>;\n}\n\nexport function CardContent(props) {\n  const { backgroundColor = \"#FFFFFF\", children, style } = props;\n  return (\n    <Card\n      style={{\n        backgroundColor: backgroundColor,\n        // marginTop: -25, comment out this since we are not able to to control the dot height of taro ui carousel\n        paddingLeft: 15,\n        paddingRight: 15,\n        zIndex: 10,\n        ...style,\n      }}\n    >\n      {children}\n    </Card>\n  );\n}\n\nexport function CategoryListing({\n  categories,\n  categoryId,\n  imageHeight = 180,\n  imageWidth = 250,\n  items,\n  onClickItem,\n}) {\n  const displayCategory = categories.find(\n    (category) => category.id === categoryId\n  );\n  const itemsCard = items\n    .filter((item) => {\n      for (let index = 0; index < item.categories.length; index++) {\n        const currentCategoryId = item.categories[index].id;\n        if (currentCategoryId === categoryId) {\n          return true;\n        }\n      }\n      return false;\n    })\n    .map((item, index) => {\n      const { name } = item;\n      return (\n        <FlexView\n          key={\"CategoryListing\" + index}\n          onClick={() => onClickItem(item)}\n          style={{ marginRight: 25 }}\n        >\n          <Image\n            mode=\"aspectFill\"\n            src={item.imageUrls[0]}\n            style={{\n              borderRadius: 10,\n              height: imageHeight,\n              width: imageWidth,\n            }}\n          />\n          <Info>{name ? name : \"\"}</Info>\n        </FlexView>\n      );\n    });\n  let name = \"\";\n  if (displayCategory) {\n    name = displayCategory.name;\n  }\n  return (\n    <FlexView>\n      <H2>{name ? name : \"分類\"}</H2>\n      <ScrollView scrollX scrollWithAnimation>\n        <FlexView style={{ display: \"flex\", flexDirection: \"row\" }}>\n          {itemsCard}\n        </FlexView>\n      </ScrollView>\n    </FlexView>\n  );\n}\n\nexport function DefaultCardContent({\n  banners,\n  bottomList,\n  categories,\n  items,\n  mainMenuButtons,\n  onClickItem,\n  onClickMenuButton,\n}) {\n  return (\n    <CardContent>\n      <ButtonRow\n        mainMenuButtons={mainMenuButtons}\n        onClickMenuButton={onClickMenuButton}\n      />\n      {/* <OneRowBanners banners={banners} /> */}\n      <BottomListing\n        bottomList={bottomList}\n        categories={categories}\n        items={items}\n        onClickItem={onClickItem}\n      />\n    </CardContent>\n  );\n}\n\nexport function ItemListing({ itemId }) {\n  return null;\n}\n\nexport function OneRowBanners({ banners }) {\n  return banners.map((banner, index) => (\n    <Image\n      key={OneRowBanners + index}\n      src={banner.url}\n      style={{ borderRadius: 15, maxHeight: 100, width: \"100%\" }}\n    />\n  ));\n}\n","export const CATEGORY = \"/pages/category/category\";\nexport const ITEM_DETAIL = \"/pages/itemDetail/itemDetail\";\n","import {\n  GET_COMPANY,\n  GET_COMPANY_CATEGORIES,\n  GET_COMPANY_CUSTOMISE,\n  GET_ITEMS,\n} from \"./service\";\n\nexport default class AppStateService {\n  appState;\n  serviceExecutor;\n\n  constructor(appState, serviceExecutor) {\n    this.appState = appState;\n    this.serviceExecutor = serviceExecutor;\n  }\n\n  getCategories(companyId) {\n    const { categories, dirty, setCategories } = this.appState.category;\n    return new Promise((resolve, reject) => {\n      if (dirty) {\n        this.serviceExecutor\n          .execute(GET_COMPANY_CATEGORIES(companyId))\n          .then((categoriesResponse) => {\n            setCategories(categoriesResponse);\n            return resolve(categoriesResponse);\n          });\n      } else {\n        return resolve(categories);\n      }\n    });\n  }\n\n  getCompany(companyId) {\n    const { companyInfo, dirty, setCompany } = this.appState.company;\n    return new Promise((resolve, reject) => {\n      if (dirty) {\n        this.serviceExecutor\n          .execute(GET_COMPANY(companyId))\n          .then((companyInfo) => {\n            setCompany(companyInfo);\n            return resolve(companyInfo);\n          });\n      } else {\n        return resolve(companyInfo);\n      }\n    });\n  }\n\n  getCompanyCustomise(companyId) {\n    const { dirty, setCompanyCustomise } = this.appState.companyCustomise;\n    return new Promise((resolve, reject) => {\n      if (dirty) {\n        this.serviceExecutor\n          .execute(GET_COMPANY_CUSTOMISE(companyId))\n          .then((result) => {\n            const content = JSON.parse(result.content);\n            setCompanyCustomise(content);\n            return resolve(content);\n          });\n      } else {\n        resolve(this.appState.companyCustomise);\n      }\n    });\n  }\n\n  getItems(companyId) {\n    const { dirty, items, setItems } = this.appState.item;\n    return new Promise((resolve, reject) => {\n      if (dirty) {\n        this.serviceExecutor.execute(GET_ITEMS(companyId)).then((items) => {\n          setItems(items);\n          return resolve(items);\n        });\n      } else {\n        return resolve(items);\n      }\n    });\n  }\n}\n","const PUBLIC_CATEGORY_SERVICE = \"/public/v1/category\";\nconst PUBLIC_COMPANY_CUSTOMISE_SERVICE = \"/public/v1/company_customise\";\nconst PUBLIC_COMPANY_SERVICE = \"/public/v1/company\";\nconst PUBLIC_ITEM_SERVICE = \"/public/v1/item\";\n\n// Category\nexport function GET_COMPANY_CATEGORIES(companyId) {\n  return {\n    url: `${PUBLIC_CATEGORY_SERVICE}/categories?companyId=${companyId}`,\n    method: \"GET\",\n  };\n}\n\n// Company\nexport function GET_COMPANY(companyId) {\n  return {\n    url: `${PUBLIC_COMPANY_SERVICE}?companyId=${companyId}`,\n    method: \"GET\",\n  };\n}\n\n// Company Customise\nexport function GET_COMPANY_CUSTOMISE(companyId) {\n  return {\n    url: `${PUBLIC_COMPANY_CUSTOMISE_SERVICE}?companyId=${companyId}`,\n    method: \"GET\",\n  };\n}\n\n// Item\nexport function GET_ITEM(companyId, itemId) {\n  return {\n    url: `${PUBLIC_ITEM_SERVICE}?companyId=${companyId}&itemId=${itemId}`,\n    method: \"GET\",\n  };\n}\n\nexport function GET_ITEMS(companyId) {\n  return {\n    url: `${PUBLIC_ITEM_SERVICE}/items?companyId=${companyId}`,\n    method: \"GET\",\n  };\n}\n","import Taro from \"@tarojs/taro\";\n\nexport default class ServiceExecutor {\n  constructor(host) {\n    this.host = host;\n  }\n\n  execute(service) {\n    const { url, method } = service;\n    return Taro.request({\n      url: this.host + url,\n      method,\n    })\n      .then((rawResponse) => {\n        return this.processServerResponse(rawResponse);\n      })\n      .catch((exception) => {\n        console.log(exception);\n      });\n  }\n\n  processServerResponse(rawResponse) {\n    const { statusCode } = rawResponse;\n    if (statusCode >= 200 && statusCode < 300) {\n      return this.process2xxResponse(rawResponse);\n    } else if (statusCode >= 400 && statusCode < 500) {\n    } else if (statusCode >= 500) {\n    } else {\n    }\n  }\n\n  process2xxResponse(rawResponse) {\n    const { statusCode } = rawResponse;\n    if (statusCode === 200) {\n      return rawResponse.data;\n    }\n  }\n\n  process3xxResponse(rawResponse) {}\n\n  process4xxResponse(rawResponse) {}\n\n  process5xxResponse(rawResponse) {}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AARA;AAUA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAvBA;AACA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AArBA;AADA;AAAA;AA+BA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AADA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;AArIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AACA;;;;;;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAIA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;;;AAEA;AACA;AAAA;AAAA;AACA;;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AA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;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AAAA;AAdA;AAiBA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AASA;AAEA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAFA;AAMA;AACA;AACA;AACA;AAJA;AANA;AAcA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAOA;;;;;;;;;;;;;AC9LA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AAMA;AAIA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAIA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;;;AAEA;;;AAEA;;;;;;;;;;A","sourceRoot":""}