{"version":3,"file":"pages/itemDetail/itemDetail.js","sources":["webpack:///./src/pages/itemDetail/itemDetail.jsx","webpack:///./src/common/applicationButton.jsx","webpack:///./src/pages/itemDetail/itemDetail.jsx?ecd7","webpack:///./src/pages/itemDetail/itemDetail.scss","webpack:///./src/pages/itemDetail/itemDetail.view.jsx"],"sourcesContent":["import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport ItemDetailView from \"./itemDetail.view\";\nimport { GET_ITEM } from \"../../service/service\";\n\nexport default class ItemDetail extends ApplicationComponent {\n  state = {\n    ...this.state,\n    itemDetail: { imageUrls: [] },\n  };\n\n  componentDidMount() {\n    const companyId = this.appState.company.id;\n    const { itemId } = this.getRouterParams();\n    this.getLocalItemDetail(companyId, itemId);\n  }\n\n  render() {\n    return <ItemDetailView {...this.state} />;\n  }\n\n  getLocalItemDetail(companyId, itemId) {\n    this.appStateService.getItems().then((items) =>\n      items.map((item) => {\n        if (item.id == itemId) {\n          this.setState({ itemDetail: item });\n        }\n      })\n    );\n  }\n\n  getRemoteItemDetail(companyId, itemId) {\n    this.serviceExecutor\n      .execute(GET_ITEM(companyId, itemId))\n      .then((itemDetail) =>\n        this.setState({\n          itemDetail,\n        })\n      );\n  }\n}\n","import React from \"react\";\nimport { AtButton } from \"taro-ui\";\nimport ApplicationComponentView from \"./applicationComponent.view\";\nimport H2 from \"./text/h2\";\n\nexport default class ApplicationButton extends ApplicationComponentView {\n  render() {\n    const { children, style } = this.props;\n    const { primary, secondary } = this.appStyle;\n    return (\n      <AtButton\n        circle\n        customStyle={{\n          alignItems: \"center\",\n          backgroundColor: primary,\n          borderColor: secondary,\n          justifyContent: \"center\",\n          width: \"100%\",\n          ...style,\n        }}\n        {...this.props}\n      >\n        <H2 style={{ color: \"white\" }}>{children}</H2>\n      </AtButton>\n    );\n  }\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./itemDetail.jsx\"\nvar config = {\"navigationBarTitleText\":\"產品詳細\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/itemDetail/itemDetail', {root:{cn:[]}}, config || {}))\n\n","// extracted by mini-css-extract-plugin","import React, { Fragment } from \"react\";\nimport { ScrollView } from \"@tarojs/components\";\nimport { AtDivider, AtIcon } from \"taro-ui\";\nimport { CardContent } from \"../landingPage/landingPage.view\";\nimport { ListingTypeTag } from \"../category/category.view\";\nimport ImageCarousel from \"../../common/imageCarousel\";\nimport H1 from \"../../common/text/h1\";\nimport H3 from \"../../common/text/h3\";\nimport P from \"../../common/text/paragraph\";\nimport FlexView from \"../../common/flexView\";\nimport ApplicationTag from \"../../common/applicationTag\";\nimport H2 from \"../../common/text/h2\";\nimport ApplicationButton from \"../../common/applicationButton\";\nimport Info from \"../../common/text/info\";\nimport ApplicationComponentView from \"../../common/applicationComponent.view\";\n\nimport \"./itemDetail.scss\";\n\nexport default class ItemDetailView extends ApplicationComponentView {\n  render() {\n    const { itemDetail, onClickSubmit = () => {} } = this.props;\n    return (\n      <this.Wrapper>\n        <ImageCarousel imageUrls={itemDetail.imageUrls} />\n        <Content onClickSubmit={onClickSubmit} {...itemDetail} />\n      </this.Wrapper>\n    );\n  }\n}\n\nexport function Content(props) {\n  const {\n    address,\n    area,\n    createTime,\n    categories = [],\n    cost,\n    description,\n    id,\n    listingType,\n    name,\n    style,\n    onClickSubmit,\n  } = props;\n  const tags = categories.map((category, index) => (\n    <ApplicationTag\n      color=\"yellow\"\n      key={\"ApplicationTag\" + index}\n      style={{ marginRight: 5 }}\n    >\n      {category.name}\n    </ApplicationTag>\n  ));\n  return (\n    <CardContent\n      style={{ flex: 1, height: \"100%\", justifyContent: \"space-between\" }}\n    >\n      <ScrollView scrollY style={{ height: 410 }}>\n        <FlexView style={{ marginTop: 15 }}>\n          <ItemHeader id={id} listingType={listingType} name={name} />\n        </FlexView>\n        <FlexView style={{ flexDirection: \"row\", ...style }}>{tags}</FlexView>\n        <Info style={{ marginTop: 5 }}>{address}</Info>\n        <ItemAbstractHeaders {...props} />\n\n        <FlexView style={{ marginTop: 15 }}>\n          <Description description={description} />\n        </FlexView>\n      </ScrollView>\n      <FlexView style={{ flex: 1, justifyContent: \"flex-end\" }}>\n        <ApplicationButton\n          block\n          onClick={onClickSubmit}\n          style={{ marginBottom: 15 }}\n        >\n          預約睇樓\n        </ApplicationButton>\n      </FlexView>\n    </CardContent>\n  );\n}\n\nexport function Description({ description }) {\n  return (\n    <Fragment>\n      <FlexView\n        style={{ alignItems: \"center\", flexDirection: \"row\", marginTop: 5 }}\n      >\n        <AtIcon value=\"tags\" />\n        <H2 style={{ marginLeft: 5 }}>房屋信息</H2>\n      </FlexView>\n      <FlexView style={{ marginTop: 15 }}>\n        <H3 style={{ lineHeight: \"38px\" }}>{description}</H3>\n      </FlexView>\n    </Fragment>\n  );\n}\n\nexport function ItemAbstractHeader({ header, icon, iconColor, label }) {\n  return (\n    <FlexView style={{ alignItems: \"center\" }}>\n      <FlexView style={{ alignItems: \"center\", flexDirection: \"row\" }}>\n        <AtIcon color={iconColor} value={icon} />\n        <P style={{ marginLeft: 5 }}>{label}</P>\n      </FlexView>\n      <H3 companyColor style={{ fontWeight: 600, marginTop: 8 }}>\n        {header}\n      </H3>\n    </FlexView>\n  );\n}\n\nexport function ItemAbstractHeaders(props) {\n  const { area, cost, livingRoom, restRoom, room } = props;\n  return (\n    <Fragment>\n      <AtDivider height={60} />\n      <FlexView\n        style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}\n      >\n        <ItemAbstractHeader\n          header={parseInt(cost).toLocaleString()}\n          icon=\"money\"\n          iconColor=\"#85BB65\"\n          label=\"價格\"\n        />\n        <ItemAbstractHeader\n          header={`${room}房${livingRoom}廳`}\n          icon=\"numbered-list\"\n          iconColor=\"#d7471d\"\n          label=\"佈局\"\n        />\n        <ItemAbstractHeader\n          header={`${area}平方呎`}\n          icon=\"home\"\n          iconColor=\"#007AFF\"\n          label=\"面積\"\n        />\n      </FlexView>\n    </Fragment>\n  );\n}\n\nexport function ItemHeader(props) {\n  const { id, listingType, name } = props;\n  return (\n    <FlexView>\n      <FlexView\n        style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n      >\n        <ListingTypeTag listingType={listingType} />\n        <ApplicationTag color=\"geekblue\">ID: {id}</ApplicationTag>\n      </FlexView>\n      <H1 style={{ marginTop: 5 }}>{name}</H1>\n    </FlexView>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;;AAGA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAOA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AADA;AAHA;AAOA;;;;AAlCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;;;AAEA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAZA;AAeA;;;;AApBA;AACA;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAFA;AAKA;;;;AATA;AACA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAEA;AAEA;AAAA;AAAA;AAHA;AAAA;AADA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AARA;AAYA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AADA;AAfA;AA0BA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAPA;AAYA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAfA;AAFA;AA0BA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;;;;A","sourceRoot":""}